
#Область ПрограммныйИнтерфейс

Процедура ДобавитьФайл(ПараметрыВыполнения, ФормаВладелец) Экспорт
	
	ПараметрыРаботыСФайлом = Новый Структура;
	ПараметрыРаботыСФайлом.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	ПараметрыРаботыСФайлом.Вставить("ФормаВладелец", ФормаВладелец);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ЭтотОбъект, ПараметрыРаботыСФайлом);
	тз_РаботаСФайламиКлиентСлужебный.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗагрузитьФайл(ПрисоединенныйФайл) Экспорт
	
	ПараметрыРаботыСФайлом = Новый Структура;
	ПараметрыРаботыСФайлом.Вставить("ПрисоединенныйФайл", ПрисоединенныйФайл);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьФайлРасширениеПредложено", ЭтотОбъект, ПараметрыРаботыСФайлом);
	тз_РаботаСФайламиКлиентСлужебный.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ДобавитьФайлОбработкаЗагрузки(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт//Помещен, Адрес, ВыбранноеИмяФайла, ПараметрыВыполнения) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
		
		Если ПомещенныйФайл.ПомещениеФайлаОтменено Тогда
			тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='При сохранении файлы произошла ошибка.'"));
			Продолжить;
		КонецЕсли;
		
		Результат = Новый Структура;
		Результат.Вставить("ФайлДобавлен", Ложь);
		Результат.Вставить("ФайлСсылка",   Неопределено);
		Результат.Вставить("ТекстОшибки",  "");
		
		СтруктураПути = тз_ОбщегоНазначенияКлиентСерверТрекер.РазложитьПолноеИмяФайла(ПомещенныйФайл.СсылкаНаФайл.Имя);
		Попытка
			ПараметрыФайла = СтруктураФайла();
			ПараметрыФайла.ВладелецФайла = ДополнительныеПараметры.ВладелецФайла;
			ПараметрыФайла.КомментарийВладелец = ДополнительныеПараметры.Комментарий;
			ПараметрыФайла.ИмяБезРасширения = СтруктураПути.ИмяБезРасширения;
			ПараметрыФайла.РасширениеБезТочки = тз_ОбщегоНазначенияКлиентСерверТрекер.РасширениеБезТочки(СтруктураПути.Расширение);
			ПараметрыФайла.АдресВременногоХранилищаФайла = ПомещенныйФайл.Адрес;
			Если Не ДополнительныеПараметры.ОтложенноеДобавление Тогда
				Результат.ФайлСсылка = тз_РаботаСФайламиВызовСервера.ДобавитьФайлНаСервере(ПараметрыФайла, ПомещенныйФайл.Адрес);
				Результат.ФайлДобавлен = Истина;
			КонецЕсли;
		Исключение
			Результат.ТекстОшибки = СтрШаблон(НСтр("ru = 'Не удалось создать файл по причине:
					|%1'"),
					ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));;
		КонецПопытки;
		Если Результат.ТекстОшибки <> "" Тогда
			тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
			ПРодолжить;
		КонецЕсли;
		
		ПараметрыОповещения = ПараметрыОповещенияЗаписиФайла();
		ПараметрыОповещения.Владелец = ДополнительныеПараметры.ВладелецФайла;
		ПараметрыОповещения.Файл = ?(ДополнительныеПараметры.ОтложенноеДобавление, ПараметрыФайла, Результат.ФайлСсылка);
		ПараметрыОповещения.ЭтоНовый = Истина;
		ПараметрыОповещения.Вставить("ОтложенноеДобавление", ДополнительныеПараметры.ОтложенноеДобавление);
		ПараметрыОповещения.Вставить("РежимФормы", ДополнительныеПараметры.РежимФормы);
		Оповестить("Запись_Файл", ПараметрыОповещения, Результат.ФайлСсылка);
		
		Если Не ДополнительныеПараметры.ОтложенноеДобавление Тогда
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Создание:'"),
				ПолучитьНавигационнуюСсылку(Результат.ФайлСсылка),
				Результат.ФайлСсылка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует структуру файла
Функция СтруктураФайла() Экспорт
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить("ВладелецФайла");
	СтруктураФайла.Вставить("КомментарийВладелец");
	СтруктураФайла.Вставить("ИмяБезРасширения");
	СтруктураФайла.Вставить("Комментарий", "");
	СтруктураФайла.Вставить("АдресВременногоХранилищаТекста");
	СтруктураФайла.Вставить("Автор");
	СтруктураФайла.Вставить("ИмяСправочникаХранилищаФайлов", "тз_ЗаданиеПрисоединенныеФайлы");
	СтруктураФайла.Вставить("АдресВременногоХранилищаФайла");
	СтруктураФайла.Вставить("РасширениеБезТочки");
	СтруктураФайла.Вставить("ВремяИзменения", Дата('00010101'));
	СтруктураФайла.Вставить("ВремяИзмененияУниверсальное", Дата('00010101'));
	СтруктураФайла.Вставить("Размер", 0);
	Возврат СтруктураФайла;
	
КонецФункции

Функция ПараметрыОповещенияЗаписиФайла(Событие = "") Экспорт
	ПараметрыСобытия = Новый Структура;
	ПараметрыСобытия.Вставить("Событие", Событие);
	ПараметрыСобытия.Вставить("ЭтоНовый", Ложь);
	ПараметрыСобытия.Вставить("Владелец");
	ПараметрыСобытия.Вставить("ВладелецФайла"); // для совместимости
	ПараметрыСобытия.Вставить("Файл");
	Возврат ПараметрыСобытия;
КонецФункции

Функция ПолучитьДанныеФайла(ПрисоединенныйФайл) Экспорт
	Возврат тз_РаботаСФайламиВызовСервера.ПолучитьДанныеФайла(ПрисоединенныйФайл);
КонецФункции

Функция ПолучитьФайлИзХранилищаФайлов(ПрисоединенныйФайл) Экспорт
	
	Возврат тз_РаботаСФайламиВызовСервера.ПолучитьФайлИзХранилищаФайловНаСервере(ПрисоединенныйФайл);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Асинх Процедура ДобавитьФайлыРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		Если ДополнительныеПараметры.ПараметрыВыполнения.НеобходимоОткрытиеДиалога Тогда
			ПараметрыВыбораФайлов = Новый ПараметрыДиалогаПомещенияФайлов;
			ПараметрыВыбораФайлов.МножественныйВыбор = Истина;
			ПараметрыВыбораФайлов.Заголовок = НСтр("ru = 'Выбор файла'");
			ПараметрыВыбораФайлов.Фильтр = НСтр("ru = 'Все файлы'") + " (*.*)|*.*";
			
			Обработчик = Новый ОписаниеОповещения("ДобавитьФайлОбработкаЗагрузки", ЭтотОбъект, ДополнительныеПараметры.ПараметрыВыполнения);
			НачатьПомещениеФайловНаСервер(Обработчик,,, ПараметрыВыбораФайлов, ДополнительныеПараметры.ФормаВладелец.УникальныйИдентификатор);
		Иначе
			ПередоваемыеФайлы = Новый Массив;
			Для Каждого ИмяФайла Из ДополнительныеПараметры.ПараметрыВыполнения.ИменаФайлов Цикл
				ПередоваемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла));
			КонецЦикла;
			Обработчик = Новый ОписаниеОповещения("ДобавитьФайлОбработкаЗагрузки", ЭтотОбъект, ДополнительныеПараметры.ПараметрыВыполнения);
			НачатьПомещениеФайловНаСервер(Обработчик,,, ПередоваемыеФайлы, ДополнительныеПараметры.ФормаВладелец.УникальныйИдентификатор);
		КонецЕсли;
			
	Иначе // Если веб-клиент без подключенного расширения.
		РасширениеУстановлено = Ждать УстановитьРасширениеРаботыСФайламиАсинх();
	КонецЕсли;
	
КонецПроцедуры

Асинх Процедура ЗагрузитьФайлРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры = Ложь) Экспорт
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		ДанныеФайла = ПолучитьДанныеФайла(ДополнительныеПараметры.ПрисоединенныйФайл);
		ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;// ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ПараметрыДиалога.Заголовок = "Выберите место для сохранения";
		Ждать ПолучитьФайлССервераАсинх(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,ДанныеФайла.ИмяФайла , ПараметрыДиалога);
	Иначе // Если веб-клиент без подключенного расширения.
		РасширениеУстановлено = Ждать УстановитьРасширениеРаботыСФайламиАсинх();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти