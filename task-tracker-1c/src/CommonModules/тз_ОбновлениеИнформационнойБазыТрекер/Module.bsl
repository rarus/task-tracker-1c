#Область ПрограммныйИнтерфейс

Процедура ПроверитьРасширение() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураОтбора = Новый Структура("Имя", "ТрекерЗаданий");
	МассивРасширений = РасширенияКонфигурации.Получить(СтруктураОтбора);
	Если МассивРасширений.Количество() > 0 Тогда
		РасширениеТрекера = МассивРасширений[0];
	КонецЕсли;
	
	Если РасширениеТрекера = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВерсияРасширения = РасширениеТрекера.Версия;
	
	ВерсияИзКонстанты = Константы.тз_ВерсияРасширения.Получить();
	ПервоеЗаполнение = ПустаяСтрока(ВерсияИзКонстанты);
	
	// Если Результат сравнения больше 0, то произошло либо обновление, либо нужно провести первоначальное заполнение.
	РезультатСравненияВерсий = СравнитьВерсии(ВерсияРасширения, ВерсияИзКонстанты);
	
	Отказ = Ложь;
	
	// Стандартная проверка при каждом запуске.
	// Проверим соответствие типов предопределенных элементов ПВХ определяемым типам.
	// При необходимости проставим тип у элемента.
	ПроверитьТипыПредопределенныхЭлементовПВХ(Отказ);
	
	Если ПервоеЗаполнение Тогда
		ВыполнитьПервоначальноеЗаполнение(Отказ);
	ИначеЕсли РезультатСравненияВерсий > 0 Тогда
		ВыполнитьОбработчикиОбновления(ВерсияИзКонстанты, ВерсияРасширения);
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстСообщения = НСтр("ru='Во время обновления расширения Трекер заданий возникли ошибки.'");
		тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		Константы.тз_ВерсияРасширения.Установить(ВерсияРасширения);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СравнитьВерсии(Знач СтрокаВерсии1, Знач СтрокаВерсии2)
	
	Строка1 = ?(ПустаяСтрока(СтрокаВерсии1), "0.0.0.0", СтрокаВерсии1);
	Строка2 = ?(ПустаяСтрока(СтрокаВерсии2), "0.0.0.0", СтрокаВерсии2);
	Версия1 = СтрРазделить(Строка1, ".");
	Если Версия1.Количество() <> 4 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неправильный формат параметра %1: %2'"), "СтрокаВерсии1", СтрокаВерсии1);
	КонецЕсли;
	Версия2 = СтрРазделить(Строка2, ".");
	Если Версия2.Количество() <> 4 Тогда
		ВызватьИсключение СтрШаблон(
	    	НСтр("ru = 'Неправильный формат параметра %1: %2'"), "СтрокаВерсии2", СтрокаВерсии2);
	КонецЕсли;
	
	Результат = 0;
	Для Разряд = 0 По 3 Цикл
		Результат = Число(Версия1[Разряд]) - Число(Версия2[Разряд]);
		Если Результат <> 0 Тогда
			Возврат Результат;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Процедура ВыполнитьПервоначальноеЗаполнение(Отказ = Ложь)
	НачатьТранзакцию();
	
	// Вызываем обработчики первоначального заполнения справочников.
	Справочники.тз_СостоянияЗаданий.ВыполнитьПервоначальноеЗаполнение(Отказ);
	Справочники.тз_Приоритеты.ВыполнитьПервоначальноеЗаполнение(Отказ);
	Справочники.тз_ПрофилиЗаданий.ВыполнитьПервоначальноеЗаполнение(Отказ);
	
	//Заполняем константы настроек.
	Константы.тз_ВремяЗаписиКомментария.Установить(60);
	
	МассивРеквизитовПоТипуПроекта = тз_ОбщегоНазначенияТрекер.ПолучитьМассивТиповСвязейЭтапаСПроектом();
	Если МассивРеквизитовПоТипуПроекта.Количество() > 0 Тогда
		Константы.тз_РеквизитЭтапаДляСвязиСПроектом.Установить(МассивРеквизитовПоТипуПроекта[0].Имя);
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ПроверитьТипыПредопределенныхЭлементовПВХ(Отказ = Ложь)
	
	ТекстОшибки = "";
	
	ТипПользователя = тз_ОбщегоНазначенияТрекер.ПолучитьТипОпределяемогоТипа("тз_Пользователи",, ТекстОшибки);
	Если ТипПользователя = Неопределено Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	Иначе
		ТекущиеТипыТекущегоИсполнителя = ПланыВидовХарактеристик.тз_ВидыАналитик.ТекущийИсполнитель.ТипЗначения.Типы();
		ИндексТипаТекущегоИсполнителя = ТекущиеТипыТекущегоИсполнителя.Найти(ТипПользователя);
		Если ИндексТипаТекущегоИсполнителя = Неопределено Тогда
			ИзменитьТипПредопределенногоЗначения(ПланыВидовХарактеристик.тз_ВидыАналитик.ТекущийИсполнитель, ТипПользователя, Отказ);
		КонецЕсли;
		
		ТекущиеТипыИсполнителя = ПланыВидовХарактеристик.тз_ВидыАналитик.Исполнитель.ТипЗначения.Типы();
		ИндексТипаИсполнителя = ТекущиеТипыИсполнителя.Найти(ТипПользователя);
		Если ИндексТипаИсполнителя = Неопределено Тогда
			ИзменитьТипПредопределенногоЗначения(ПланыВидовХарактеристик.тз_ВидыАналитик.Исполнитель, ТипПользователя, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ТипПроекта = тз_ОбщегоНазначенияТрекер.ПолучитьТипОпределяемогоТипа("тз_Проекты",, ТекстОшибки);
	Если ТипПроекта = Неопределено Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	Иначе
		ТекущиеТипыПроекта = ПланыВидовХарактеристик.тз_ВидыАналитик.Проект.ТипЗначения.Типы();
		ИндексТипаПроекта = ТекущиеТипыПроекта.Найти(ТипПроекта);
		Если ИндексТипаПроекта = Неопределено Тогда
			ИзменитьТипПредопределенногоЗначения(ПланыВидовХарактеристик.тз_ВидыАналитик.Проект, ТипПроекта, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ТипЭтапа = тз_ОбщегоНазначенияТрекер.ПолучитьТипОпределяемогоТипа("тз_Этапы",, ТекстОшибки);
	Если ТипЭтапа = Неопределено Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	Иначе
		ТекущиеТипыЭтапа = ПланыВидовХарактеристик.тз_ВидыАналитик.Этап.ТипЗначения.Типы();
		ИндексТипаЭтапа = ТекущиеТипыЭтапа.Найти(ТипЭтапа);
		Если ИндексТипаЭтапа = Неопределено Тогда
			ИзменитьТипПредопределенногоЗначения(ПланыВидовХарактеристик.тз_ВидыАналитик.Этап, ТипЭтапа, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьТипПредопределенногоЗначения(ПредопределенныйЭлемент, НовыйТип, Отказ = Ложь)
	
	ОбъектЭлемента = ПредопределенныйЭлемент.ПолучитьОбъект();
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(НовыйТип);
	
	ОбъектЭлемента.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	Попытка
		ОбъектЭлемента.Записать();
	Исключение
		Отказ = Истина;
		ТекстОшибки = СтрШаблон(
		НСтр("ru = 'Не удалось заполнить предопределенный профиль:
		|%1'"),
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

Процедура ВыполнитьОбработчикиОбновления(СтараяВерсия, НоваяВерсия)
	
КонецПроцедуры

#КонецОбласти