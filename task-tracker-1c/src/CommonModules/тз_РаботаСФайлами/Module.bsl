#Область ПрограммныйИнтерфейс

Функция ДобавитьФайл(ПараметрыФайла, АдресВременногоХранилища) Экспорт
	
	ВладелецФайлов     = ПараметрыФайла.ВладелецФайла;
	ИмяБезРасширения   = тз_ОбщегоНазначенияКлиентСерверТрекер.ЗаменитьНедопустимыеСимволыВИмениФайла(ПараметрыФайла.ИмяБезРасширения);
	РасширениеБезТочки = тз_ОбщегоНазначенияКлиентСерверТрекер.ЗаменитьНедопустимыеСимволыВИмениФайла(ПараметрыФайла.РасширениеБезТочки);
	
	Если Не ЗначениеЗаполнено(ВладелецФайлов) Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Не задано значение параметра %1 в %2.'"), "ПараметрыФайла.ВладелецФайлов", "РаботаСФайлами.ДобавитьФайл");
	КонецЕсли;
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	ВремяИзмененияУниверсальное = ПараметрыФайла.ВремяИзмененияУниверсальное;
	Если Не ЗначениеЗаполнено(ВремяИзмененияУниверсальное)
		Или ВремяИзмененияУниверсальное > ТекущаяУниверсальнаяДата() Тогда
		ВремяИзмененияУниверсальное = ТекущаяУниверсальнаяДата();
	КонецЕсли;
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка при добавлении присоединенного файла.'");
	
	НоваяСсылкаНаФайл = Неопределено;
	Если НоваяСсылкаНаФайл = Неопределено Тогда
		ИмяСправочника = "тз_ЗаданиеПрисоединенныеФайлы";
		
		УникальныйИдентификатор = ?(ПараметрыФайла.Свойство("СсылкаНового"),
			Новый УникальныйИдентификатор(ПараметрыФайла.СсылкаНового),
			Новый УникальныйИдентификатор());
		
		НоваяСсылкаНаФайл = Справочники[ИмяСправочника].ПолучитьСсылку(УникальныйИдентификатор);
	Иначе
		
		Если Не Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(НоваяСсылкаНаФайл))
			Или Не ЗначениеЗаполнено(НоваяСсылкаНаФайл) Тогда
			
			ВызватьИсключение НСтр("ru = 'Ошибка при добавлении присоединенного файла.
				|Ссылка на новый файл не заполнена.'");
		КонецЕсли;
		
		ИмяСправочника = "тз_ЗаданиеПрисоединенныеФайлы";
		
	КонецЕсли;
	
	ПрисоединенныйФайл = Справочники[ИмяСправочника].СоздатьЭлемент(); // ОпределяемыйТип.ПрисоединенныйФайлОбъект
	ПрисоединенныйФайл.УстановитьСсылкуНового(НоваяСсылкаНаФайл);
	
	ПрисоединенныйФайл.ВладелецФайла                = ВладелецФайлов;
	ПрисоединенныйФайл.ДатаМодификацииУниверсальная = ВремяИзмененияУниверсальное;
	ПрисоединенныйФайл.ДатаСоздания                 = ТекущаяДатаСеанса();
	ПрисоединенныйФайл.Наименование                 = ИмяБезРасширения;
	ПрисоединенныйФайл.Размер                       = ДвоичныеДанныеФайла.Размер();
	ПрисоединенныйФайл.Расширение                   = РасширениеБезТочки;
	ПрисоединенныйФайл.ТипХраненияФайла             = Перечисления.тз_ТипыХраненияФайлов.ВИнформационнойБазе; //тз_РаботаСФайламиСлужебный.ТипХраненияФайла(ПрисоединенныйФайл.Размер,
	ПрисоединенныйФайл.Изменил                      = ПараметрыФайла.Автор;

	ЗаполнитьЗначенияСвойств(ПрисоединенныйФайл, ПараметрыФайла);
	
	ПрисоединенныйФайл.Том        = Справочники.тз_ТомаХраненияФайлов.ПустаяСсылка();
	ПрисоединенныйФайл.ПутьКФайлу = "";
	ПрисоединенныйФайл.Заполнить(Неопределено);

	
	Если Не ЗначениеЗаполнено(ПрисоединенныйФайл.Автор) Тогда
		ПрисоединенныйФайл.Автор = тз_Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПрисоединенныйФайл.Изменил) Тогда
		ПрисоединенныйФайл.Изменил = тз_Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Контекст = тз_РаботаСФайламиСлужебный.КонтекстОбновленияФайла(ПрисоединенныйФайл, АдресВременногоХранилища, НоваяСсылкаНаФайл);
	МенеджерФайла = тз_РаботаСФайламиСлужебный.МенеджерФайлов(ПрисоединенныйФайл);
	МенеджерФайла.ПередОбновлениемДанныхФайла(Контекст);
	
	НачатьТранзакцию();
	Попытка
		
		МенеджерФайла.ПередЗаписьюДанныхФайла(Контекст, ПрисоединенныйФайл);
		ПрисоединенныйФайл.Записать();
		
		МенеджерФайла.ПриОбновленииДанныхФайла(Контекст, ПрисоединенныйФайл.Ссылка);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ШаблонСообщения = НСтр("ru = 'Ошибка при добавлении присоединенного файла ""%1"":
			|%2'");
		КомментарийЖурналаРегистрации = СтрШаблон(
			ШаблонСообщения,
			ИмяБезРасширения + "." + РасширениеБезТочки,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Файлы.Добавление присоединенного файла'",
			Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			КомментарийЖурналаРегистрации);
		
		МенеджерФайла.ПослеОбновленияДанныхФайла(Контекст, Ложь);
		
		ВызватьИсключение СтрШаблон(
			ШаблонСообщения,
			ИмяБезРасширения + "." + РасширениеБезТочки,
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
			
	КонецПопытки;
	
	МенеджерФайла.ПослеОбновленияДанныхФайла(Контекст, Истина);
	
	Возврат ПрисоединенныйФайл.Ссылка;
	
КонецФункции

Функция УдалитьФайл(Файл) Экспорт
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Файл", Файл);
	ЗаписьВРегистре = РегистрыСведений.тз_ХранилищеФайлов.Получить(СтруктураОтбора);
	
	НачатьТранзакцию();
	Попытка
		ОбъектФайла = Файл.ПолучитьОбъект();
		ОбъектДанных = ЗаписьВРегистре.ХранилищеДвоичныхДанных.ПолучитьОбъект();
		
		ОбъектФайла.УстановитьПометкуУдаления(Истина);
		ОбъектДанных.УстановитьПометкуУдаления(Истина);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ШаблонСообщения = НСтр("ru = 'Ошибка при установке пометки на удаление присоединенного файла ""%1"":
			|%2'");
		КомментарийЖурналаРегистрации = СтрШаблон(
			ШаблонСообщения,
			ОбъектФайла.Наименование + "." + ОбъектФайла.Расширение,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Файлы.Удаление присоединенного файла'",
			Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			КомментарийЖурналаРегистрации);
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
	
КонецФункции

Функция РасширениеДляЗашифрованныхФайлов() Экспорт
	
	Если тз_ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		МодульЭлектроннаяПодпись = тз_ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодпись");
		Возврат МодульЭлектроннаяПодпись.ПерсональныеНастройки().РасширениеДляЗашифрованныхФайлов;
	Иначе
		Возврат "p7m";
	КонецЕсли;
	
КонецФункции

Функция ДвоичныеДанныеФайла(Знач ПрисоединенныйФайл, Знач ВызыватьИсключение = Истина) Экспорт
	
	ФайлОбъект = тз_РаботаСФайламиСлужебный.ФайлОбъект(ПрисоединенныйФайл);
	Если (ФайлОбъект = Неопределено Или ФайлОбъект.ЭтоГруппа) И Не ВызыватьИсключение Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	Если ФайлОбъект.ПометкаУдаления Тогда
		тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл не найден.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = ХранилищеФайлаИзИнформационнойБазы(ФайлОбъект.Ссылка);
	Если ТипЗнч(Результат) = Тип("ХранилищеЗначения") Тогда
		Результат = Результат.Получить();
		Если ТипЗнч(Результат) = Тип("ДвоичныеДанные") Тогда
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
	
КонецФункции

Функция ПолучитьФайлИзХранилищаФайлов(ПрисоединенныйФайл) Экспорт
	
	Результат = Новый Структура;
	
	ДвоичныеДанные = ХранилищеФайлаИзИнформационнойБазы(ПрисоединенныйФайл);
	Если ТипЗнч(ДвоичныеДанные) = Тип("ХранилищеЗначения") Тогда
		ДвоичныеДанные = ДвоичныеДанные.Получить();
	КонецЕсли;
	Возврат ДвоичныеДанные;
	
КонецФункции

Функция ХранилищеФайлаИзИнформационнойБазы(ФайлСсылка) Экспорт
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХранилищеФайлов.ХранилищеДвоичныхДанных.ДвоичныеДанные КАК ДвоичныеДанныеФайла
	|ИЗ
	|	РегистрСведений.тз_ХранилищеФайлов КАК ХранилищеФайлов
	|ГДЕ
	|	ХранилищеФайлов.Файл = &ФайлСсылка";
	
	Запрос.УстановитьПараметр("ФайлСсылка", ФайлСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДвоичныеДанныеФайла;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеФайла(ФайлСсылка) Экспорт
	
	Если ТипЗнч(ФайлСсылка) = Тип("УникальныйИдентификатор") Тогда
		ФайлСсылка = Справочники.тз_ЗаданиеПрисоединенныеФайлы.ПолучитьСсылку(ФайлСсылка);
	КонецЕсли;
	
	ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
	тз_ОбщегоНазначенияКлиентСервер.Проверить(ФайлОбъект <> Неопределено, 
		СтрШаблон(НСтр("ru = 'Не найден присоединенный файл ""%1"" (%2)'"),
		Строка(ФайлСсылка), ФайлСсылка.Метаданные()));
	
	Результат = Новый Структура;
	Результат.Вставить("Ссылка",                       ФайлСсылка);
	Результат.Вставить("СсылкаНаДвоичныеДанныеФайла",  ПоместитьВоВременноеХранилище(ПолучитьФайлИзХранилищаФайлов(ФайлСсылка)));
	Результат.Вставить("ДатаМодификацииУниверсальная", ФайлОбъект.ДатаМодификацииУниверсальная);
	Результат.Вставить("ИмяФайла",                     тз_ОбщегоНазначенияКлиентСерверТрекер.ПолучитьИмяСРасширением(ФайлОбъект.Наименование, ФайлОбъект.Расширение));
	Результат.Вставить("Наименование",                 ФайлОбъект.Наименование);
	Результат.Вставить("Расширение",                   ФайлОбъект.Расширение);
	Результат.Вставить("Размер",                       ФайлОбъект.Размер);
	Результат.Вставить("Редактирует",                  ФайлОбъект.Редактирует);
	Результат.Вставить("ПодписанЭП",                   ФайлОбъект.ПодписанЭП);
	Результат.Вставить("Зашифрован",                   ФайлОбъект.Зашифрован);
	Результат.Вставить("ХранитьВерсии",                ФайлОбъект.ХранитьВерсии);
	Результат.Вставить("ПометкаУдаления",              ФайлОбъект.ПометкаУдаления);
	Результат.Вставить("ДатаЗаема",                    ФайлОбъект.ДатаЗаема);
	Результат.Вставить("Владелец",                     ФайлОбъект.ВладелецФайла);
	Результат.Вставить("АвторТекущейВерсии",           ФайлОбъект.Изменил);
	Результат.Вставить("НавигационнаяСсылка",          ПолучитьНавигационнуюСсылку(ФайлСсылка));
	
	Возврат Результат;
КонецФункции

// Инициализирует структуру файла
Функция СтруктураФайлаНаСервере() Экспорт
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить("ВладелецФайла");
	СтруктураФайла.Вставить("КомментарийВладелец");
	СтруктураФайла.Вставить("ИмяБезРасширения");
	СтруктураФайла.Вставить("Комментарий", "");
	СтруктураФайла.Вставить("АдресВременногоХранилищаТекста");
	СтруктураФайла.Вставить("Автор");
	СтруктураФайла.Вставить("ИмяСправочникаХранилищаФайлов", "тз_ЗаданиеПрисоединенныеФайлы");
	СтруктураФайла.Вставить("АдресВременногоХранилищаФайла");
	СтруктураФайла.Вставить("РасширениеБезТочки");
	СтруктураФайла.Вставить("ВремяИзменения", Дата('00010101'));
	СтруктураФайла.Вставить("ВремяИзмененияУниверсальное", Дата('00010101'));
	СтруктураФайла.Вставить("Размер", 0);
	СтруктураФайла.Вставить("СсылкаНового", "");
	Возврат СтруктураФайла;
	
КонецФункции

#КонецОбласти