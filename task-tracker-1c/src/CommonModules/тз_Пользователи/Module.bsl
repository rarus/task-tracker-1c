#Область ПрограммныйИнтерфейс

Процедура УстановкаПараметровСеанса(ИменаПараметровСеанса) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		Значения = ЗначенияПараметровСеансаТекущийПользователь();
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Не удалось установить параметр сеанса %1 по причине:
			           |""%2"".
			           |
			           |Обратитесь к администратору.'"),
			"ТекущийПользователь",
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;
	
	Если ТипЗнч(Значения) = Тип("Строка") Тогда
		ВызватьИсключение Значения;
	КонецЕсли;
	
	ПараметрыСеанса.тз_ТекущийПользователь        = Значения.ТекущийПользователь;
	
КонецПроцедуры

Функция СвойстваНеуказанногоПользователя() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Свойства = Новый Структура;
	Свойства.Вставить("Ссылка", Неопределено);
	
	Свойства.Вставить("СтандартнаяСсылка", Справочники.тз_Пользователи.ПолучитьСсылку(
		Новый УникальныйИдентификатор("aaa233c3-85d5-4f58-9c5d-e8e9e741f06e")));
	
	Свойства.Вставить("ПолноеИмя", "<" + НСтр("ru = 'Не указан'") + ">");
	
	Свойства.Вставить("ПолноеИмяДляПоиска", "<" + НСтр("ru = 'Не указан'") + ">");
	
	// Поиск по уникальному идентификатору.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Свойства.СтандартнаяСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЗначениеИстина
	|ИЗ
	|	Справочник.тз_Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &Ссылка";
	
	НачатьТранзакцию();
	Попытка
		Если Запрос.Выполнить().Пустой() Тогда
			Запрос.УстановитьПараметр("ПолноеИмя", Свойства.ПолноеИмяДляПоиска);
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Пользователи.Ссылка
			|ИЗ
			|	Справочник.тз_Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.Наименование = &ПолноеИмя";
			Результат = Запрос.Выполнить();
			
			Если НЕ Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				Свойства.Ссылка = Выборка.Ссылка;
			КонецЕсли;
		Иначе
			Свойства.Ссылка = Свойства.СтандартнаяСсылка;
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Свойства;
	
КонецФункции

Функция ТекущийПользователь() Экспорт
	
	ТекущийПользователь = Неопределено;
	Если тз_ПользователиВызовСервера.ИспользуютсяПользователиБСП() Тогда
		МодульРаботыСПользователем = тз_ОбщегоНазначения.ОбщийМодуль("Пользователи");
		Если МодульРаботыСПользователем <> Неопределено Тогда
			ТекущийПользователь = МодульРаботыСПользователем.ТекущийПользователь();
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийПользователь) Тогда
		УстановитьПривилегированныйРежим(Истина);
		ТекущийПользователь = ПараметрыСеанса.тз_ТекущийПользователь;
	КонецЕсли;
	
	Возврат ТекущийПользователь;
КонецФункции

Функция ПустойПользователь() Экспорт
	
	ТекущийПользователь = Неопределено;
	Если тз_ПользователиВызовСервера.ИспользуютсяПользователиБСП() Тогда
		МодульРаботыСПользователем = тз_ОбщегоНазначения.ОбщийМодуль("Пользователи");
		Если МодульРаботыСПользователем <> Неопределено Тогда
			ПустойПользователь = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ПустойПользователь = Справочники.тз_Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ПустойПользователь;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

функция ЗначенияПараметровСеансаТекущийПользователь() 
	
	ЗаголовокОшибки = СтрШаблон(
		НСтр("ru = 'Не удалось установить параметр сеанса %1.'"),
		"ТекущийПользователь") + Символы.ПС;
	
	НачатьТранзакцию();
	Попытка
		СведенияОПользователе = НайтиТекущегоПользователяВСправочнике();
		
		Если СведенияОПользователе.СоздатьПользователя Тогда
			СоздатьТекущегоПользователяВСправочнике(СведенияОПользователе);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если Не СведенияОПользователе.СоздатьПользователя
	   И Не СведенияОПользователе.ПользовательНайден Тогда
		
		Возврат ЗаголовокОшибки + ТекстСообщенияПользовательНеНайденВСправочнике(
			СведенияОПользователе.ИмяПользователя);
	КонецЕсли;
	
	Если СведенияОПользователе.ТекущийПользователь        = Неопределено Тогда
		
		Возврат ЗаголовокОшибки + ТекстСообщенияПользовательНеНайденВСправочнике(
				СведенияОПользователе.ИмяПользователя) + Символы.ПС
			+ НСтр("ru = 'Возникла внутренняя ошибка при поиске пользователя.'");
	КонецЕсли;
	
	Значения = Новый Структура;
	Значения.Вставить("ТекущийПользователь",        СведенияОПользователе.ТекущийПользователь);
	
	Возврат Значения;
	
КонецФункции

Функция НайтиТекущегоПользователяВСправочнике()
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяПользователя",             Неопределено);
	Результат.Вставить("ПолноеИмяПользователя",       Неопределено);
	Результат.Вставить("ИдентификаторПользователяИБ", Неопределено);
	Результат.Вставить("ПользовательНайден",          Ложь);
	Результат.Вставить("СоздатьПользователя",         Ложь);
	Результат.Вставить("СсылкаНового",                Неопределено);
	Результат.Вставить("Служебный",                   Ложь);
	Результат.Вставить("ТекущийПользователь",         Неопределено);
	
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ПустаяСтрока(ТекущийПользовательИБ.Имя) Тогда
		СвойстваНеуказанногоПользователя = СвойстваНеуказанногоПользователя();
		
		Результат.ИмяПользователя       = СвойстваНеуказанногоПользователя.ПолноеИмя;
		Результат.ПолноеИмяПользователя = СвойстваНеуказанногоПользователя.ПолноеИмя;
		Результат.СсылкаНового          = СвойстваНеуказанногоПользователя.СтандартнаяСсылка;
		
		Если СвойстваНеуказанногоПользователя.Ссылка = Неопределено Тогда
			Результат.СоздатьПользователя = Истина;
			Результат.Служебный = Истина;
			Результат.ИдентификаторПользователяИБ = "";
		Иначе
			Результат.ПользовательНайден = Истина;
			Результат.ТекущийПользователь = СвойстваНеуказанногоПользователя.Ссылка;
		КонецЕсли;
		
		Возврат Результат;
	КонецЕсли;

	Результат.ИмяПользователя             = ТекущийПользовательИБ.Имя;
	Результат.ИдентификаторПользователяИБ = ТекущийПользовательИБ.УникальныйИдентификатор;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ИдентификаторПользователяИБ", Результат.ИдентификаторПользователяИБ);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.тз_Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ИдентификаторПользователяИБ = &ИдентификаторПользователяИБ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат.ТекущийПользователь = Выборка.Ссылка;
		Результат.ПользовательНайден = Истина;
		Возврат Результат;
	КонецЕсли;
	
	ПользовательПоНаименованию = СсылкаПользователяПоПолномуНаименованию(
		Результат.ПолноеИмяПользователя);
	
	Если ПользовательПоНаименованию <> Неопределено Тогда
		Результат.ПользовательНайден  = Истина;
		Результат.ТекущийПользователь = ПользовательПоНаименованию;
	Иначе
		Результат.СоздатьПользователя = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СсылкаПользователяПоПолномуНаименованию(ПолноеИмя)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.тз_Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Наименование = &ПолноеИмя";
	
	Запрос.УстановитьПараметр("ПолноеИмя", ПолноеИмя);
	
	Результат = Неопределено;
	
	НачатьТранзакцию();
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			Результат = Выборка.Ссылка;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Процедура СоздатьТекущегоПользователяВСправочнике(СведенияОПользователе)
	
	НачатьТранзакцию();
	Попытка
		Если СведенияОПользователе.СсылкаНового = Неопределено Тогда
			СведенияОПользователе.СсылкаНового = Справочники.тз_Пользователи.ПолучитьСсылку();
		КонецЕсли;
		
		СведенияОПользователе.ТекущийПользователь = СведенияОПользователе.СсылкаНового;
		
		ПараметрыСеанса.тз_ТекущийПользователь        = СведенияОПользователе.ТекущийПользователь;
		
		НовыйПользователь = Справочники.тз_Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование = СведенияОПользователе.ИмяПользователя;
		НовыйПользователь.УстановитьСсылкуНового(СведенияОПользователе.СсылкаНового);
		
		Если ЗначениеЗаполнено(СведенияОПользователе.ИдентификаторПользователяИБ) Тогда
			НовыйПользователь.ИдентификаторПользователяИБ = СведенияОПользователе.ИдентификаторПользователяИБ;
		КонецЕсли;
		
		НовыйПользователь.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОчищаемыеПараметры = Новый Массив;
		ОчищаемыеПараметры.Добавить("тз_ТекущийПользователь");
		ПараметрыСеанса.Очистить(ОчищаемыеПараметры);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Функция ТекстСообщенияПользовательНеНайденВСправочнике(ИмяПользователя)
	
	ШаблонСообщенияОбОшибке =
		НСтр("ru = 'Пользователь ""%1"" не существует в справочнике ""тз_Пользователи"".
		           |
		           |Обратитесь к администратору.'");
	
	Возврат СтрШаблон(ШаблонСообщенияОбОшибке, ИмяПользователя);
	
КонецФункции

#КонецОбласти