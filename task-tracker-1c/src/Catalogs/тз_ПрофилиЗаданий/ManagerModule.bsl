
Процедура ВыполнитьПервоначальноеЗаполнение(Отказ = Ложь) Экспорт
	
	// Заполним шапку.
	ПредопределенныйЭлемент = Справочники.тз_ПрофилиЗаданий.ОсновнойПрофиль.ПолучитьОбъект();
	ПредопределенныйЭлемент.НаименованиеПолное = НСтр("ru='Основной профиль'");
	ПредопределенныйЭлемент.ПрефиксЗаданий = "ТЗ";
	
	// Заполним доступные состояния.
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеСостоянияЗаданий.Добавить();
	СтрокаСостояния.СостояниеЗадания = Справочники.тз_СостоянияЗаданий.Новое;
	
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеСостоянияЗаданий.Добавить();
	СтрокаСостояния.СостояниеЗадания = Справочники.тз_СостоянияЗаданий.ВРаботе;
	
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеСостоянияЗаданий.Добавить();
	СтрокаСостояния.СостояниеЗадания = Справочники.тз_СостоянияЗаданий.Завершено;
	
	// Заполним доступные приоритеты.
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеПриоритеты.Добавить();
	СтрокаСостояния.Приоритет = Справочники.тз_Приоритеты.Низкий;
	
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеПриоритеты.Добавить();
	СтрокаСостояния.Приоритет = Справочники.тз_Приоритеты.Средний;
	
	СтрокаСостояния = ПредопределенныйЭлемент.ДоступныеПриоритеты.Добавить();
	СтрокаСостояния.Приоритет = Справочники.тз_Приоритеты.Высокий;
	
	Попытка
		ПредопределенныйЭлемент.Записать();
	Исключение
		Отказ = Истина;
		ОтменитьТранзакцию();
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Не удалось заполнить предопределенный профиль:
			|%1'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		тз_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьПереченьСостоянийЗаданий(Профиль, Состояния) Экспорт

	Если ТипЗнч(Состояния)=Тип("СписокЗначений") Тогда
		Состояния.Очистить();
	Иначе
		Состояния = Новый СписокЗначений();
	КонецЕсли;
	
	Если Профиль.ДоступныеСостоянияЗаданий.Количество() > 0 Тогда
		Состояния.ЗагрузитьЗначения(Профиль.ДоступныеСостоянияЗаданий.ВыгрузитьКолонку("СостояниеЗадания"));
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	тз_СостоянияЗаданий.Ссылка КАК Ссылка,
			|	тз_СостоянияЗаданий.Представление КАК Представление
			|ИЗ
			|	Справочник.тз_СостоянияЗаданий КАК тз_СостоянияЗаданий";
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Состояния.Добавить(Выборка.Ссылка, Выборка.Представление);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Состояния;
	
КонецФункции // ПолучитьПереченьСостоянийЗаданий()

Функция ПолучитьПереченьПриоритетов(Профиль, Приоритеты) Экспорт

	Если ТипЗнч(Приоритеты)=Тип("СписокЗначений") Тогда
		Приоритеты.Очистить();
	Иначе
		Приоритеты = Новый СписокЗначений();
	КонецЕсли;
	
	Если Профиль.ДоступныеПриоритеты.Количество() > 0 Тогда
		Приоритеты.ЗагрузитьЗначения(Профиль.ДоступныеПриоритеты.ВыгрузитьКолонку("Приоритет"));
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	тз_Приоритеты.Ссылка КАК Ссылка,
			|	тз_Приоритеты.Представление КАК Представление
			|ИЗ
			|	Справочник.тз_Приоритеты КАК тз_Приоритеты";
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Приоритеты.Добавить(Выборка.Ссылка, Выборка.Представление);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Приоритеты;
	
КонецФункции // ПолучитьПереченьСостоянийЗаданий()

Функция ПолучитьПереченьВидовЗаданий(Профиль, ВидыЗаданий = Неопределено, ПолученВесьСправочник = Ложь) Экспорт
	
	НужноЗаполнятьСписок = ВидыЗаданий <> Неопределено;
	Если НужноЗаполнятьСписок И ТипЗнч(ВидыЗаданий)=Тип("СписокЗначений") Тогда
		ВидыЗаданий.Очистить();
	Иначе
		ВидыЗаданий = Новый СписокЗначений();
	КонецЕсли;
	
	МассивВидовЗаданий = Новый Массив;
	Если  Профиль.ДоступныеВидыЗаданий.Количество() > 0 Тогда
		МассивВидовЗаданий = Профиль.ДоступныеВидыЗаданий.ВыгрузитьКолонку("ВидЗадания");
		Если НужноЗаполнятьСписок Тогда
			ВидыЗаданий.ЗагрузитьЗначения(МассивВидовЗаданий);
		КонецЕсли;
	Иначе
		ПолученВесьСправочник = Истина;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	тз_ВидыЗаданий.Ссылка КАК Ссылка,
			|	тз_ВидыЗаданий.Представление КАК Представление
			|ИЗ
			|	Справочник.тз_ВидыЗаданий КАК тз_ВидыЗаданий";
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			МассивВидовЗаданий.Добавить(Выборка.Ссылка);
			Если НужноЗаполнятьСписок Тогда
				ВидыЗаданий.Добавить(Выборка.Ссылка, Выборка.Представление);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивВидовЗаданий;
	
КонецФункции // ПолучитьПереченьСостоянийЗаданий()

Функция ПолучитьПереченьПроектов(Профиль, СписокПроектов = Неопределено) Экспорт

	НужноЗаполнятьСписок = СписокПроектов <> Неопределено;
	Если НужноЗаполнятьСписок И ТипЗнч(СписокПроектов)=Тип("СписокЗначений") Тогда
		СписокПроектов.Очистить();
	Иначе
		СписокПроектов = Новый СписокЗначений();
	КонецЕсли;
	
	МассивПроектов = Новый Массив;
	Если Профиль.ДоступныеПроекты.Количество() > 0 Тогда
		МассивПроектов = Профиль.ДоступныеПроекты.ВыгрузитьКолонку("Проект");
		Если НужноЗаполнятьСписок Тогда
			СписокПроектов.ЗагрузитьЗначения(МассивПроектов);
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Проекты.Ссылка КАК Ссылка,
			|	Проекты.Представление КАК Представление
			|ИЗ
			|	Справочник.&Проект КАК Проекты";
		
		ТипОпределяемогоПроектаСтрокой = Метаданные.НайтиПоТипу(Метаданные.ОпределяемыеТипы.тз_Проекты.Тип.Типы()[0]).Имя;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Проект", ТипОпределяемогоПроектаСтрокой);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивПроектов.Добавить(Выборка.Ссылка);
			Если НужноЗаполнятьСписок Тогда
				СписокПроектов.Добавить(Выборка.Ссылка, Выборка.Представление);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивПроектов;
	
КонецФункции // ПолучитьПереченьПроектов()