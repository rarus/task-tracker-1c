
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтборИзФормы") Тогда
		Для Каждого Элемент Из Параметры.ОтборИзФормы Цикл
			УстановитьЗначениеОтбора(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		Список.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
	КонецЕсли;
	
	Элементы.СписокНапомнить.Видимость = тз_ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.НапоминанияПользователя")
		И тз_ОбщегоНазначенияТрекер.ОпределяемыеТипыНапоминанийЗаполнены();
		
	тз_ОбщегоНазначенияВызовСервераТрекер.ЗаписатьОперациюБизнесСтатистики("ОткрытиеСпискаЗаданий");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Профиль = ПолучитьЗначениеОтбора(Список, "Профиль");
	Если Не ЗначениеЗаполнено(Профиль) Тогда
		Профиль = ПредопределенноеЗначение("Справочник.тз_ПрофилиЗаданий.ОсновнойПрофиль");
		УстановитьЗначениеОтбора("Профиль", Профиль);
	КонецЕсли;
	НастроитьПараметрыВыбораЭлементовФормы(Профиль);
	СоздатьРеквизитыИЭлементыАналитик();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или Не ТекущиеДанные.Свойство("Ссылка") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Задание", ТекущиеДанные.Ссылка);
	
	ОткрытьФорму("Документ.тз_Задание.Форма.ФормаЗадания",ПараметрыОткрытия,ЭтотОбъект,ТекущиеДанные.Ссылка,);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	ВыбранныйПрофиль = ПолучитьЗначениеОтбора(Список, "Профиль");
	Если Не ЗначениеЗаполнено(ВыбранныйПрофиль) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Выберите профиль, перед созданием задания.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СозданиеНового", Истина);
	ПараметрыОткрытия.Вставить("Профиль", ВыбранныйПрофиль);
	ПараметрыОткрытия.Вставить("Проект", ПолучитьЗначениеОтбора(Список, "Проект"));
	ПараметрыОткрытия.Вставить("Этап", ПолучитьЗначениеОтбора(Список, "Этап"));
	ПараметрыОткрытия.Вставить("РежимФормы", ПредопределенноеЗначение("Перечисление.тз_РежимыФормы.Редактирование"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеЗадания", ЭтотОбъект);
	
	ОткрытьФорму("Документ.тз_Задание.Форма.ФормаЗадания",ПараметрыОткрытия,ЭтотОбъект,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура МоиЗадания(Команда)
	МоиЗаданияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОПрограмме(Команда)
	ОткрытьФорму("ОбщаяФорма.ОПрограмме",,ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Напомнить(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Источник = ТекущиеДанные.Ссылка;
	
	ПараметрыФормы = Новый Структура("Источник", Источник);
	ОткрытьФорму("РегистрСведений.НапоминанияПользователя.Форма.Напоминание", ПараметрыФормы, ЭтотОбъект, Ложь, Неопределено);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьЗапросЗаданийПоАналитикам()
	
	ШаблонТекстЗапроса = "ВЫБРАТЬ
		|	Документтз_Задание.Ссылка КАК Ссылка,
		|	Документтз_Задание.Номер КАК Номер,
		|	Документтз_Задание.Дата КАК Дата,
		|	Документтз_Задание.Основание КАК Основание,
		|	Документтз_Задание.Состояние КАК Состояние,
		|	ВЫБОР
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.Новое)
		|			И НЕ Документтз_Задание.ПометкаУдаления
		|			ТОГДА 0
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.ВРаботе)
		|				И НЕ Документтз_Задание.ПометкаУдаления
		|			ТОГДА 1
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.Завершено)
		|				И НЕ Документтз_Задание.ПометкаУдаления
		|			ТОГДА 2
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.Новое)
		|				И Документтз_Задание.ПометкаУдаления
		|			ТОГДА 3
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.ВРаботе)
		|				И Документтз_Задание.ПометкаУдаления
		|			ТОГДА 4
		|		КОГДА Документтз_Задание.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.тз_СтатусыВыполнения.Завершено)
		|				И Документтз_Задание.ПометкаУдаления
		|			ТОГДА 5
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтатусВыполнения,
		|	Документтз_Задание.Проект КАК Проект,
		|	Документтз_Задание.Автор КАК Автор,
		|	Документтз_Задание.ДатаЗавершения КАК ДатаЗавершения,
		|	Документтз_Задание.ВидЗадания КАК ВидЗадания,
		|	Документтз_Задание.Приоритет КАК Приоритет,
		|	Документтз_Задание.Этап КАК Этап,
		|	Документтз_Задание.Профиль КАК Профиль,
		|	Документтз_Задание.ТекущийИсполнитель КАК ТекущийИсполнитель,
		|	Документтз_Задание.Наименование КАК Наименование
		|ПОМЕСТИТЬ втЗаданияПоПрофилю
		|ИЗ
		|	Документ.тз_Задание КАК Документтз_Задание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗаданияПоПрофилю.Ссылка КАК Ссылка,
		|	втЗаданияПоПрофилю.Номер КАК Номер,
		|	втЗаданияПоПрофилю.Дата КАК Дата,
		|	втЗаданияПоПрофилю.Основание КАК Основание,
		|	втЗаданияПоПрофилю.Состояние КАК Состояние,
		|	втЗаданияПоПрофилю.СтатусВыполнения КАК СтатусВыполнения,
		|	втЗаданияПоПрофилю.Проект КАК Проект,
		|	втЗаданияПоПрофилю.Автор КАК Автор,
		|	втЗаданияПоПрофилю.ДатаЗавершения КАК ДатаЗавершения,
		|	втЗаданияПоПрофилю.ВидЗадания КАК ВидЗадания,
		|	втЗаданияПоПрофилю.Приоритет КАК Приоритет,
		|	втЗаданияПоПрофилю.Этап КАК Этап,
		|	втЗаданияПоПрофилю.Профиль КАК Профиль,
		|	втЗаданияПоПрофилю.ТекущийИсполнитель КАК ТекущийИсполнитель,
		|	втЗаданияПоПрофилю.Наименование КАК Наименование,
		|	тз_ПроектыДоступныеВидыАналитик.Аналитика КАК Аналитика
		|ПОМЕСТИТЬ ВтЗаданияПоАналитикам
		|ИЗ
		|	втЗаданияПоПрофилю КАК втЗаданияПоПрофилю
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.тз_ПрофилиЗаданий.ДоступныеВидыАналитик КАК тз_ПроектыДоступныеВидыАналитик
		|		ПО втЗаданияПоПрофилю.Профиль = тз_ПроектыДоступныеВидыАналитик.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтЗаданияПоАналитикам.Ссылка КАК Ссылка,
		|	ВтЗаданияПоАналитикам.Номер КАК Номер,
		|	ВтЗаданияПоАналитикам.Дата КАК Дата,
		|	ВтЗаданияПоАналитикам.Основание КАК Основание,
		|	ВтЗаданияПоАналитикам.Состояние КАК Состояние,
		|	ВтЗаданияПоАналитикам.СтатусВыполнения КАК СтатусВыполнения,
		|	ВтЗаданияПоАналитикам.Проект КАК Проект,
		|	ВтЗаданияПоАналитикам.Автор КАК Автор,
		|	ВтЗаданияПоАналитикам.ДатаЗавершения КАК ДатаЗавершения,
		|	ВтЗаданияПоАналитикам.ВидЗадания КАК ВидЗадания,
		|	ВтЗаданияПоАналитикам.Приоритет КАК Приоритет,
		|	ВтЗаданияПоАналитикам.Этап КАК Этап,
		|	ВтЗаданияПоАналитикам.Профиль КАК Профиль,
		|	ВтЗаданияПоАналитикам.ТекущийИсполнитель КАК ТекущийИсполнитель,
		|	ВтЗаданияПоАналитикам.Наименование КАК Наименование,
		|	ВтЗаданияПоАналитикам.Аналитика КАК Аналитика,
		|	ЕСТЬNULL(тз_ЗначенияАналитикСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения,
		|	ЕСТЬNULL(тз_ЗначенияАналитикСрезПоследних.Автор, ЗНАЧЕНИЕ(Справочник.тз_Пользователи.ПустаяСсылка)) КАК АвторИзменения,
		|	ЕСТЬNULL(тз_ЗначенияАналитикСрезПоследних.Значение, """") КАК ЗначениеАналитики
		|ПОМЕСТИТЬ втЗаданияСоЗначениямиАналитик
		|ИЗ
		|	ВтЗаданияПоАналитикам КАК ВтЗаданияПоАналитикам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.тз_ЗначенияАналитик.СрезПоследних(
		|				&Период,
		|				(Задание, Аналитика) В
		|					(ВЫБРАТЬ
		|						ВтЗаданияПоАналитикам.Ссылка,
		|						ВтЗаданияПоАналитикам.Аналитика
		|					ИЗ
		|						ВтЗаданияПоАналитикам)) КАК тз_ЗначенияАналитикСрезПоследних
		|		ПО ВтЗаданияПоАналитикам.Ссылка = тз_ЗначенияАналитикСрезПоследних.Задание
		|			И ВтЗаданияПоАналитикам.Аналитика = тз_ЗначенияАналитикСрезПоследних.Аналитика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗаданияСоЗначениямиАналитик.Ссылка КАК Ссылка,
		|	втЗаданияСоЗначениямиАналитик.Номер КАК Номер,
		|	втЗаданияСоЗначениямиАналитик.Дата КАК Дата,
		|	втЗаданияСоЗначениямиАналитик.Основание КАК Основание,
		|	втЗаданияСоЗначениямиАналитик.Состояние КАК Состояние,
		|	втЗаданияСоЗначениямиАналитик.СтатусВыполнения КАК СтатусВыполнения,
		|	втЗаданияСоЗначениямиАналитик.Проект КАК Проект,
		|	втЗаданияСоЗначениямиАналитик.Автор КАК Автор,
		|	втЗаданияСоЗначениямиАналитик.ДатаЗавершения КАК ДатаЗавершения,
		|	МАКСИМУМ (
		|	ВЫБОР
		|		КОГДА втЗаданияСоЗначениямиАналитик.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.тз_ВидыАналитик.Состояние)
		|			ТОГДА втЗаданияСоЗначениямиАналитик.ДатаИзменения
		|			ИНАЧЕ NULL
		|		КОНЕЦ
		|	) КАК ДатаИзмененияСостояния,
		|	МАКСИМУМ (
		|		ВЫБОР
		|			КОГДА втЗаданияСоЗначениямиАналитик.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.тз_ВидыАналитик.Состояние)
		|				ТОГДА втЗаданияСоЗначениямиАналитик.АвторИзменения
		|			ИНАЧЕ NULL
		|		КОНЕЦ
		|	) КАК АвторИзмененияСостояния,
		|	втЗаданияСоЗначениямиАналитик.ВидЗадания КАК ВидЗадания,
		|	втЗаданияСоЗначениямиАналитик.Приоритет КАК Приоритет,
		|	втЗаданияСоЗначениямиАналитик.Этап КАК Этап,
		|	втЗаданияСоЗначениямиАналитик.Профиль КАК Профиль,
		|	втЗаданияСоЗначениямиАналитик.ТекущийИсполнитель КАК ТекущийИсполнитель,
		|	втЗаданияСоЗначениямиАналитик.Наименование КАК Наименование";
	
	СтрокаГруппировок = "";
	ПодстрокаЗапросаГДЕ = "";
	СоставПодстрокаЗапросаГДЕ = "";
	Для Каждого СтрокаАналитики Из СписокАналитик Цикл
		
		ШаблонТекстЗапроса = ШаблонТекстЗапроса +
		",
		|МАКСИМУМ (
		|	ВЫБОР
		|		КОГДА втЗаданияСоЗначениямиАналитик.Аналитика = &" +СтрокаАналитики.ИмяЭлемента + "
		|			ТОГДА втЗаданияСоЗначениямиАналитик.ЗначениеАналитики
		|			ИНАЧЕ NULL
		|		КОНЕЦ
		|	) КАК " + СтрокаАналитики.ИмяЭлемента;
		
		СоставПодстрокаЗапросаГДЕ = СоставПодстрокаЗапросаГДЕ + ",&" + СтрокаАналитики.ИмяЭлемента + Символы.ПС;
	КонецЦикла;
	
	Если СоставПодстрокаЗапросаГДЕ <> "" Тогда
		СоставПодстрокаЗапросаГДЕ = Сред(СоставПодстрокаЗапросаГДЕ, 2);
		ПодстрокаЗапросаГДЕ = "ГДЕ
		|	втЗаданияСоЗначениямиАналитик.Аналитика В
		|	(" + 
			СоставПодстрокаЗапросаГДЕ + "
		|	) ";
	КонецЕсли;
	
	ШаблонТекстЗапроса = ШаблонТекстЗапроса +
	"
	|ПОМЕСТИТЬ втИтоговаяТаблица
	|ИЗ втЗаданияСоЗначениямиАналитик КАК втЗаданияСоЗначениямиАналитик
	|" + ПодстрокаЗапросаГДЕ + "
	|СГРУППИРОВАТЬ ПО
	|	втЗаданияСоЗначениямиАналитик.Ссылка,
	|	втЗаданияСоЗначениямиАналитик.Номер,
	|	втЗаданияСоЗначениямиАналитик.Дата,
	|	втЗаданияСоЗначениямиАналитик.Основание,
	|	втЗаданияСоЗначениямиАналитик.Состояние,
	|	втЗаданияСоЗначениямиАналитик.СтатусВыполнения,
	|	втЗаданияСоЗначениямиАналитик.Проект,
	|	втЗаданияСоЗначениямиАналитик.Автор,
	|	втЗаданияСоЗначениямиАналитик.ДатаЗавершения,
	|	втЗаданияСоЗначениямиАналитик.ВидЗадания,
	|	втЗаданияСоЗначениямиАналитик.Приоритет,
	|	втЗаданияСоЗначениямиАналитик.Этап,
	|	втЗаданияСоЗначениямиАналитик.Профиль,
	|	втЗаданияСоЗначениямиАналитик.ТекущийИсполнитель,
	|	втЗаданияСоЗначениямиАналитик.Наименование";
		
		
	Список.ТекстЗапроса = ШаблонТекстЗапроса + ";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ втИтоговаяТаблица.* Из втИтоговаяТаблица КАК втИтоговаяТаблица";
		
	Для Каждого СтрокаАналитики Из СписокАналитик Цикл
		
		Список.Параметры.УстановитьЗначениеПараметра(СтрокаАналитики.ИмяЭлемента, СтрокаАналитики.Аналитика);
		
		НовыйЭлемент = Элементы.Добавить("Список" + СтрокаАналитики.ИмяЭлемента, Тип("ПолеФормы"), Элементы.Список);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
		НовыйЭлемент.Заголовок = СтрокаАналитики.ИмяАналитики;
		НовыйЭлемент.ПутьКДанным = "Список." + СтрокаАналитики.ИмяЭлемента;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыИЭлементыАналитик()
	
	тз_ОбщегоНазначенияТрекер.ЗаполнитьСписокАналитикЗадания(СписокАналитик,,Профиль);
	тз_ОбщегоНазначенияТрекер.СформироватьРеквизитыИЭлементыАналитик(ЭтотОбъект,
		СписокАналитик,
		Элементы.ГруппаОтборАналитики,
		,
		ПоложениеЗаголовкаЭлементаФормы.Верх);
	СформироватьЗапросЗаданийПоАналитикам();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивПроектовПоПрофилю(Профиль)
	Возврат Справочники.тз_ПрофилиЗаданий.ПолучитьПереченьПроектов(Профиль);
КонецФункции

&НаСервере
Процедура МоиЗаданияНаСервере()
	УстановитьЗначениеОтбора("ТекущийИсполнитель", тз_Пользователи.ТекущийПользователь());
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗначениеОтбора(Список, ИмяПоля)
	
	Результат = Неопределено;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ОтборПользователя = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			Результат = ОтборПользователя.ПравоеЗначение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат
	
КонецФункции

&НаСервере
Функция УстановитьЗначениеОтбора(ИмяПоля, Значение)
	
	Результат = Неопределено;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ОтборПользователя = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			ОтборПользователя.ПравоеЗначение = Значение;
			ОтборПользователя.Использование = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗакрытиеЗадания(Результат, ДополнительныеПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы(Профиль)
	
	// Параметры выбора проекта по профилю.
	ПолеПроекта = Список.Поля.Найти("Проект");
	ПараметрыВыбора = ПолеПроекта.ПараметрыРедактирования.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ПараметрыВыбора"));
	Если ПараметрыВыбора <> Неопределено Тогда
		НовыйПараметрВыбора = ПараметрыВыбора.Значение.Добавить();
		НовыйПараметрВыбора.Имя = "Отбор.Ссылка";
		ОтборПоЭлементам = ПолучитьМассивПроектовПоПрофилю(Профиль);
		НовыйПараметрВыбора.Значение = ОтборПоЭлементам;
		ПараметрыВыбора.Использование = Истина;
	КонецЕсли;
	
	РеквизитЭтапаИзКонстанты = ПолучитьРеквизитЭтапаДляСвязиСПроектом();
	Если Не ЗначениеЗаполнено(РеквизитЭтапаИзКонстанты) Тогда
		Возврат;
	КонецЕсли;
	
	// Параметры выбора этапа по проекту.
	ПолеЭтапа = Список.Поля.Найти("Этап");
	СвязьПараметровВыбораЭтапа = ПолеЭтапа.ПараметрыРедактирования.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СвязиПараметровВыбора"));
	Если СвязьПараметровВыбораЭтапа <> Неопределено Тогда
		НовыйЭлементСвязи = СвязьПараметровВыбораЭтапа.Значение.Добавить();
		НовыйЭлементСвязи.Имя = "Отбор." + РеквизитЭтапаИзКонстанты;
		НовыйЭлементСвязи.Поле = Новый ПолеКомпоновкиДанных("Проект");
		СвязьПараметровВыбораЭтапа.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитЭтапаДляСвязиСПроектом();
	Возврат Константы.тз_РеквизитЭтапаДляСвязиСПроектом.Получить();
КонецФункции

#КонецОбласти
